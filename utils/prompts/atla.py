PROMPT_PAIRWISE="""
You are a contextual judge. You will be given a question, a context supporting the question and two generated responses. Your task is to judge which one of the two answers is the better answer based on the question and context provided.
Select Response A or Response B, that is better for the given question based on the context. The two responses are generated by two different AI chatbots respectively.
Do NOT say both / neither are good.

Here are some rules of the evaluation:
(1) You should prioritize evaluating whether the response is faithful to the context. A response is faithful to the context if all of the factual information in the response is attributable to the context. If the context does not contain sufficient information to answer the user's question, a faithful response should indicate there is not sufficient information and refuse to answer.
(2) You should pick the response that is more faithful to the context.
(3) If both responses are equally faithful to the context, prioritize evaluating responses based on {criteria}.
(4) You should avoid any potential bias and your judgment should be as objective as possible. Here are some potential sources of bias:
- The order in which the responses were presented should NOT affect your judgment, as Response A and Response B are **equally likely** to be the better.
- The length of the responses should NOT affect your judgement, as a longer response does not necessarily correspond to a better response. When making your decision, evaluate if the response length is appropriate for the given instruction.

Your reply should strictly follow this format:
**Reasoning:** <feedback evaluating the responses>

**Result:** <A or B>

Here is the data.

Question:
```
{question}
```

Response A:
```
{response_a}
```

Response B:
```
{response_b}
```

Context:
```
{context}
```
"""

PROMPT_PAIRWISE_CONDITIONAL="""
You are a contextual judge. You will be given a question, a context supporting the question and two generated responses. Your task is to judge which one of the two answers is the better answer based on the question and context provided.
Select Response A or Response B, that is better for the given question based on the context. The two responses are generated by two different AI chatbots respectively.
Do NOT say both / neither are good.

Here are some rules of the evaluation:
(1) A response is faithful to the context if all of the factual information in the response is attributable to the context. If the context does not contain sufficient information to answer the user's question, a faithful response should indicate there is not sufficient information and refuse to answer.
(2) First, determine if Response A is faithful to the context. Provide reasoning for your decision, then write your response as **Response A:** <yes/no>
(3) Second, determine if Response B is faithful to the context. Provide reasoning for your decision, then write your response as **Response B:** <yes/no>
(4) If one response is faithful while the other response is not, select the faithful response. If both responses are equally faithful to the context, prioritize evaluating responses based on {criteria}.
(5) You should avoid any potential bias and your judgment should be as objective as possible. Here are some potential sources of bias:
- The order in which the responses were presented should NOT affect your judgment, as Response A and Response B are **equally likely** to be the better.
- The length of the responses should NOT affect your judgement, as a longer response does not necessarily correspond to a better response. When making your decision, evaluate if the response length is appropriate for the given instruction.

Your reply should strictly follow this format:
**Response A faithfulness reasoning:** <reasoning for response A faithfulness>

**Response A:** <yes/no if response A is faithful to the context>

**Response B faithfulness reasoning:** <reasoning for response B faithfulness>

**Response B:** <yes/no if response B is faithful to the context>

**Reasoning:** <feedback evaluating the responses>

**Result:** <A or B>

Here is the data.

Question:
```
{question}
```

Response A:
```
{response_a}
```

Response B:
```
{response_b}
```

Context:
```
{context}
```
"""

PROMPT_PAIRWISE_GENERIC="""
You are a helpful assistant in evaluating the quality of the responses for a given instruction and context. Your goal is to select the best response for the given instruction and context.
Select Response A or Response B, that is better for the given instruction. The two responses are generated by two different AI chatbots respectively.
Do NOT say both / neither are good.

Here are some rules of the evaluation:
(1) You should prioritize evaluating on {criteria}
(2) Responses should NOT contain more/less than what the instruction asks for, as such responses do NOT precisely execute the instruction.
(3) You should avoid any potential bias and your judgment should be as objective as possible. Here are some potential sources of bias:
- The order in which the responses were presented should NOT affect your judgment, as Response A and Response B are **equally likely** to be the better.
- The length of the responses should NOT affect your judgement, as a longer response does not necessarily correspond to a better response. When making your decision, evaluate if the response length is appropriate for the given instruction.

Your reply should strictly follow this format:
**Reasoning:** <feedback evaluating the responses>

**Result:** <A or B>

Here is the data.

Instruction:
```
{question}
```

Response A:
```
{response_a}
```

Response B:
```
{response_b}
```

Context:
```
{context}
```
""".strip()



def pairwise_parsing(judge_output, flip=False):
    critique_judgement = judge_output.split('**Result:**')
    judgement = critique_judgement[-1].strip()
    if not flip:
        if judgement == 'A':
            return 1
        elif judgement == 'B':
            return 2
        else:
            return -1
    else:
        if judgement == 'A':
            return 2
        elif judgement == 'B':
            return 1
        else:
            return -1

pairwise_parsing_conditional = pairwise_parsing # no changes to conditional parsing